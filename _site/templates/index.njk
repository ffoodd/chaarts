<!DOCTYPE html>
<html lang="{% block lang %}en{% endblock %}" class="no-js">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	{% block meta %}
		<title>chaarts</title>
		<meta property="og:url" content="https://ffoodd.github.io/chaarts/">
		<meta property="og:title" content="chaarts">
		<meta property="og:type" content="article">
		<meta property="og:description"
					name="description" content="Charts with HTML & CSS">
		<meta name="twitter:card" content="summary">
		<link rel="alternate" hreflang="fr" href="https://ffoodd.github.io/chaarts/accueil.html">
	{% endblock %}
	<script>document.documentElement.classList.replace('no-js', 'js');</script>
	<link rel="icon" href="favicon.svg" type="image/svg+xml">
	<link rel="stylesheet" href="css/styles.min.css" media="all">
	<link rel="stylesheet" href="css/chaarts.min.css" media="all">
	<link rel="stylesheet" href="css/print.min.css" media="print">
</head>
<body itemscope itemtype="http://schema.org/WebPage">
<header role="banner" class="d-flex">
	{% block skiplinks %}
		<div class="skip-links visually-hidden visually-hidden-focusable">
			<a href="#nav">Skip to main navigation</a>
			<a href="#main">Skip to content</a>
		</div>
	{% endblock %}

	<nav role="navigation" id="nav" aria-label="{% block label %}Main navigation{% endblock %}">
		{% block navigation %}
			<ul class="fly-out">
				<li><a aria-current="page">Home</a></li>
				<li><a href="./bar-charts.html">Bar charts</a></li>
				<li><a href="./line-charts.html">Line charts</a></li>
				<li><a href="./column-charts.html">Column charts</a></li>
				<li><a href="./pie-charts.html">Pie charts</a></li>
				<li><a href="./radar-charts.html">Radar charts</a></li>
				<li class="mis-auto">
					<a rel="alternate" hreflang="fr" lang="fr" href="./accueil.html"
						 aria-label="Version française" title="Version française">FR</a>
				</li>
				<li>
					<a href="https://github.com/ffoodd/chaarts/" class="d-flex">
						<svg viewBox="0 0 16 16" height="16" width="16" aria-hidden="true">
							<path fill-rule="evenodd"
										d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
						</svg>
						&nbsp;GitHub
					</a>
				</li>
			</ul>
		{% endblock %}
	</nav>
	{% block darkmode %}
		<div role="group" aria-label="Color scheme selection" id="theme" class="toggle no-js-hidden mis-auto">
			<button type="button" title="Dark mode"
							data-scheme="dark" aria-pressed="false">
				<svg width="24" height="24" role="img" aria-label="Dark mode" class="mi-auto no-padding">
					<path d="M3 11.98A9.81 9.81 0 0012.57 22a9.53 9.53 0 008.3-5.06 1 1 0 00-.94-1.48l-.1.01a5.2 5.2 0 01-.4.02 7.81 7.81 0 01-7.58-8.01 8.38 8.38 0 011.02-4A1 1 0 0011.92 2 9.86 9.86 0 003 11.98zm7.34-7.65a10.38 10.38 0 00-.48 3.15 9.89 9.89 0 008.28 9.92 7.4 7.4 0 01-5.57 2.6A7.81 7.81 0 015 11.98a8 8 0 015.34-7.65z"></path>
				</svg>
			</button>
			<button type="button"	title="Light mode"
							data-scheme="light" aria-pressed="false">
				<svg width="24" height="24" role="img" aria-label="Light mode" class="mi-auto no-padding">
					<path d="M12 18a6 6 0 10-6-6 6 6 0 006 6zm0-10a4 4 0 11-4 4 4 4 0 014-4zM12 4a1 1 0 001-1V2a1 1 0 00-2 0v1a1 1 0 001 1zM11 21v1a1 1 0 002 0v-1a1 1 0 00-2 0zM18.36 6.64a1 1 0 00.71-.3l.7-.7a1 1 0 00-1.4-1.42l-.71.7a1 1 0 00.7 1.72zM4.93 17.66l-.7.7a1 1 0 101.4 1.42l.71-.7a1 1 0 00-1.41-1.42zM22 11h-1a1 1 0 000 2h1a1 1 0 000-2zM2 13h1a1 1 0 000-2H2a1 1 0 000 2zM17.66 17.66a1 1 0 000 1.41l.7.7a1 1 0 001.42-1.4l-.7-.71a1 1 0 00-1.42 0zM4.93 6.34a1 1 0 001.41-1.41l-.7-.7a1 1 0 00-1.42 1.4z"></path>
				</svg>
			</button>
			<button type="button"	title="System default"
							data-scheme="none" aria-pressed="false">
				<svg width="24" height="24" role="img" aria-label="System default" class="mx-auto no-padding" viewBox="17 -18 100 100">
					<path d="M104.5 36.2h8.3c4.2 0 4.2 0 4.2-4.2s0-4.2-4.2-4.2h-8.3c-4.2 0-4.2 0-4.2 4.2s0 4.2 4.2 4.2zM67-1.3c4.2 0 4.2 0 4.2-4.2v-8.3c0-4.2 0-4.2-4.2-4.2s-4.2 0-4.2 4.2v8.3c0 4.2 0 4.2 4.2 4.2zm29.5 68.6c2.9 2.9 2.9 2.9 5.8 0 3-2.9 3-2.9 0-5.9l-5.8-5.8c-3-3-3-3-5.9 0-2.9 2.9-2.9 2.9 0 5.8zM37.6 8.4c2.9 2.9 2.9 2.9 5.8 0 3-2.9 3-2.9 0-5.9l-5.8-5.8c-3-3-3-3-5.9 0-2.9 2.9-2.9 2.9 0 5.8zM67 57a25 25 0 0 0 24.1-31.6l-7.4 7.5a16.8 16.8 0 0 1-15.8 15.8l-7.5 7.5c2.1.5 4.4.8 6.6.8zm-14.6-4.7 6.1-6A16.6 16.6 0 0 1 50.3 32c0-9.2 7.5-16.7 16.7-16.7 6.1 0 11.4 3.3 14.3 8.2l6-6a25 25 0 1 0-34.9 34.8zM67 82c4.2 0 4.2 0 4.2-4.2v-8.3c0-4.2 0-4.2-4.2-4.2s-4.2 0-4.2 4.2v8.3c0 4.2 0 4.2 4.2 4.2zM21.2 36.2h8.3c4.2 0 4.2 0 4.2-4.2s0-4.2-4.2-4.2h-8.3c-4.2 0-4.2 0-4.2 4.2s0 4.2 4.2 4.2zm10.5 31.1c2.9 2.9 2.9 2.9 5.9 0l64.8-64.8c3-3 3-2.9 0-5.8-2.9-3-2.8-2.9-5.8 0L31.7 61.4c-3 3-2.9 3 0 5.9z"/>
				</svg>
			</button>
		</div>
	{% endblock %}
</header>

<main role="main" id="main" tabindex="-1" itemprop="mainContentOfPage">
	{% block main %}
		<h1>Chaarts</h1>

		<p>
			Every charts in this project relies solely on semantic markup
			—&nbsp;<code>&lt;table&gt;</code> based&nbsp;— and a spread of
			<strong>CSS variables carried by the tags</strong>.
			No JavaScript required for display, and styles are
			<strong>progressively enhanced</strong> depending on your browser's capabilities.
		</p>

		<p>
			<strong>Note</strong>&nbsp;: by virtue of the <strong>experimental</strong>
			nature of these techniques and a <strong>solid foundation</strong> enhanced progressively,
			I don't mention <strong>browser support</strong> for each example —&nbsp;but
			it goes without saying that this is not magic, and only modern browsers handle this right,
			<a href="https://caniuse.com/#search=clip-path">with the notable exception of Edge
				which does not (yet) support <code>clip-path</code></a>.
			Other browsers display a properly styled table, and that's nice.
		</p>

		<h2 id="accessibilite">Accessibility</h2>

		<p>
			A major effort has been made to ensure accessibility.
			As mentioned above, <strong>semantic and structured markup is a prerequisite</strong>
			—&nbsp;but it's not enough. <abbr title="Cascading StyleSheet" aria-label="Cascading StyleSheet">CSS</abbr>
			is being applied as gradually as possible, in order to guarantee
			the best possible display of data for each user.
		</p>

		<h3>Accessible table</h3>

		<p>Wakeup call&nbsp;:</p>

		<ul>
			<li>a table must start with a <code>&lt;caption&gt;</code>;</li>
			<li>
				header cells <code>&lt;th&gt;</code> must carry a <code>scope</code> attribute,
				with a <var>row</var> or <var>col</var> value;
			</li>
			<li>
				and you'll usually need to distinguish the head from the body through
				<code>&lt;thead&gt;</code> and <code>&lt;tbody&gt;</code>;
			</li>
			<li>
				for values with a unit&nbsp;: if you venture to use the
				<code>&lt;abbr&gt;</code> element to use its abbreviated version, consider doubling the
				<code>title</code> with the <code>aria-label</code> attribute —&nbsp;this will considerably
				improve the interest for many users.
			</li>
		</ul>

		<p>
			For other useful tips, I warmly recommend reading
			<a href="https://inclusive-components.design/data-tables/">
				<em>Data Tables</em> Inclusive Component by <strong>Heydon Pickering</strong></a>,
			which is a real gold mine.
		</p>

		<h3>Patterns</h3>
		<p>
			To <strong>distinguish the different areas other than by colour</strong>, an
			<abbr title="Scalable Vector Graphics" aria-label="Scalable Vector Graphics">svg</abbr>
			pattern is applied in
			<abbr title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr>
			—&nbsp;you can find some of them on the
			<a href="https://www.heropatterns.com/">Hero Patterns</a> website:
		</p>
		<ol>
			<li>
				in order to <strong>improve blending with background colors or gradients</strong>, the
				<code>background-blend-mode</code> proerty is used with the <code>hard-light</code> value;
			</li>
			<li>
				<strong>pattern's size and position</strong> depends directly on the value and scale of the chart,
				depending on the type of chart;
			</li>
			<li>
				in order not to embed too many external files, we use a
				<a href="https://www.trysmudford.com/blog/using-css-custom-properties/">
					technique proposed by <strong>Trys Mudford</strong> to include each
					<abbr title="Scalable Vector Graphics" aria-label="Scalable Vector Graphics">svg</abbr>
					in data URi in a <abbr title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr> variable</a>;
				thus, a finite list of patterns is used in the theme, without ever repeating the svg.
			</li>
		</ol>

		<div class="note">
			<h4>What to encode?</h4>
			<p>
				<a href="https://codepen.io/tigt/post/optimizing-svgs-in-data-uris"><strong>Taylor Hunt</strong>
					a comprehensive article on optimizing past <abbr title="Scalable Vector Graphics"
																													 aria-label="Scalable Vector Graphics">svg</abbr>
					in URi data</a>. In summary, only the chevrons and the "#" character need to be encoded
				in the <abbr title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr>.
				Don't bother with the other characters, their encoding seriously affects readability.
			</p>
		</div>

		{% include 'includes/_svg-encoding.njk' %}

		<h3>User preferences</h3>
		<p>
			In order to respect as much as possible the preferences of the visitors,
			many elements have been adapted:
		</p>
		<ol>
			<li>
				dimensions are in relatives units (<code>em</code> or <code>rem</code> as the case may be),
				in order to fit coherently with the body of text inherited from the browser and to be able
				to be enlarged or reduced without loss;
			</li>
			<li>
				colors are adjusted when <strong>Windows High Contrast Mode</strong> is detected using
				<code>-ms-high-contrast: active</code>, inspired by
				<a href="https://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast">
					<strong>Greg Whitworth</strong> article</a> on the topic. I also recommend you
				<a href="http://www.iangraham.org/books/xhtml1/appd/update-23feb2000.html">
					<cite>Test of System Colors Specified in CSS 2</cite> rustproof page written by
					<strong>Ian Graham</strong></a>, published in… 2000!
			</li>
			<li>
				<strong>animations and transitions are disabled</strong> when the system exposes
				this preference through <code>prefers-reduced-motion: reduce</code>&nbsp;;
			</li>
			<li>
				<strong>hover effects</strong> whose initial state consists in hiding content
				are activated contextually in the <code>@media (hover: hover) { … }</code> media query.
			</li>
		</ol>

		<h3><code>display</code> and semantics</h3>
		<p>
			<strong>Adrian Roselli</strong> explains that playing with a <code>&lt;table&gt;</code> or <code>&lt;dl&gt;</code>
			element's <code>display</code> endangers its semantics.
			The latter is therefoore "locked" using dedicated
			<abbr title="Accessible Rich Internet Application" aria-label="Accessible Rich Internet Application">aria</abbr>
			roles —&nbsp;as he explains
			<a href="http://adrianroselli.com/2018/02/tables-css-display-properties-and-aria.html">in a detailed article</a>.
		</p>
		<p>
			That's why each table is preceded by a switch —&nbsp;based on
			<a href="https://inclusive-components.design/toggle-button/"><strong>Heydon Pickering</strong>
				inclusive toggle button</a>&nbsp;—
			whose one and only role is to disable additional styles:
		</p>

		{% include 'includes/_inclusive-toggle.njk' %}

		<p>
			Well, we're ready to get to the heart of the matter.<br>
			<strong>Warm up your dev tools!</strong>
		</p>
	{% endblock %}
</main>

{% block scripts %}
	<script src="js/scripts.min.js"></script>
	<script src="js/prism.min.js"></script>
{% endblock %}

{% block modal %}
{% endblock %}
</body>
</html>
