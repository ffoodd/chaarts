{% extends "index.njk" %}

{% block lang %}fr{% endblock %}

{% block meta %}
	<title>chaarts</title>
	<meta property="og:url" content="https://ffoodd.github.io/chaarts/accueil.html">
	<meta property="og:title" content="chaarts">
	<meta property="og:type" content="article">
	<meta property="og:description" name="description" content="Graphiques de données avec HTML & CSS">
	<meta name="twitter:card" content="summary">
	<link rel="alternate" hreflang="en" href="https://ffoodd.github.io/chaarts/">
{% endblock %}

{% block skiplinks %}
	<div class="skip-links visually-hidden visually-hidden-focusable">
		<a href="#nav">Aller à la navigation</a>
		<a href="#main">Aller au contenu</a>
	</div>
{% endblock %}

{% block label %}Navigation principale{% endblock %}

{% block navigation %}
	<ul class="fly-out">
		<li><a aria-current="page">Accueil</a></li>
		<li><a href="./barres.html">Barre</a></li>
		<li><a href="./courbe.html">Courbe</a></li>
		<li><a href="./histogramme.html">Histogramme</a></li>
		<li><a href="./camembert.html">Camembert</a></li>
		<li><a href="./radar.html">Radar</a></li>
		<li class="mis-auto">
			<a rel="alternate" hreflang="en" lang="en" href="./"
				 aria-label="English version" title="English version">EN</a>
		</li>
		<li>
			<a href="https://github.com/ffoodd/chaarts/" class="d-flex" hreflang="en">
				<svg viewBox="0 0 16 16" height="16" width="16" aria-hidden="true">
					<path fill-rule="evenodd"
								d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
				</svg>
				&nbsp;GitHub
			</a>
		</li>
	</ul>
{% endblock %}

{% block darkmode %}
	<div role="group" aria-label="Choix du thème" id="theme" class="toggle no-js-hidden mis-auto">
		<button type="button" title="Thème sombre"
						data-scheme="dark" aria-pressed="false">
			<svg width="24" height="24" role="img" aria-label="Thème sombre" class="mi-auto no-padding">
				<path d="M3 11.98A9.81 9.81 0 0012.57 22a9.53 9.53 0 008.3-5.06 1 1 0 00-.94-1.48l-.1.01a5.2 5.2 0 01-.4.02 7.81 7.81 0 01-7.58-8.01 8.38 8.38 0 011.02-4A1 1 0 0011.92 2 9.86 9.86 0 003 11.98zm7.34-7.65a10.38 10.38 0 00-.48 3.15 9.89 9.89 0 008.28 9.92 7.4 7.4 0 01-5.57 2.6A7.81 7.81 0 015 11.98a8 8 0 015.34-7.65z"></path>
			</svg>
		</button>
		<button type="button"	title="Thème clair"
						data-scheme="light" aria-pressed="false">
			<svg width="24" height="24" role="img" aria-label="Thème clair" class="mi-auto no-padding">
				<path d="M12 18a6 6 0 10-6-6 6 6 0 006 6zm0-10a4 4 0 11-4 4 4 4 0 014-4zM12 4a1 1 0 001-1V2a1 1 0 00-2 0v1a1 1 0 001 1zM11 21v1a1 1 0 002 0v-1a1 1 0 00-2 0zM18.36 6.64a1 1 0 00.71-.3l.7-.7a1 1 0 00-1.4-1.42l-.71.7a1 1 0 00.7 1.72zM4.93 17.66l-.7.7a1 1 0 101.4 1.42l.71-.7a1 1 0 00-1.41-1.42zM22 11h-1a1 1 0 000 2h1a1 1 0 000-2zM2 13h1a1 1 0 000-2H2a1 1 0 000 2zM17.66 17.66a1 1 0 000 1.41l.7.7a1 1 0 001.42-1.4l-.7-.71a1 1 0 00-1.42 0zM4.93 6.34a1 1 0 001.41-1.41l-.7-.7a1 1 0 00-1.42 1.4z"></path>
			</svg>
		</button>
	</div>
{% endblock %}

{% block main %}
	<h1>Graphiques</h1>

	<p>
		Les différentes versions de graphiques présentées pour le moment reposent uniquement
		sur un balisage sémantique —&nbsp;à base de <code>&lt;table&gt;</code>&nbsp;—
		et une tartine de <strong>variables CSS portées par les balises</strong>.
		Aucun JavaScript n’est requis pour l’affichage, et les styles sont
		<strong>améliorés progressivement</strong> selon les capacités de votre navigateur.
	</p>

	<p>
		<strong>Note</strong>&nbsp;: en vertu du caractère <strong>expérimental</strong>
		de ces techniques et d’une <strong>fondation solide</strong> améliorée progressivement,
		je ne précise pas le <strong>support navigateur</strong> de chaque exemple —&nbsp;mais
		il va de soi que ce n’est pas magique, et que seuls les navigateurs modernes répondent à l’appel,
		<a hreflang="en" href="https://caniuse.com/#search=clip-path">à l’exception notable de Edge
			qui ne supporte pas (encore) <code>clip-path</code></a>.
		Les autres navigateurs affichent un tableau correctement stylé, et c’est chouette.
	</p>

	<h2 id="accessibilite">L’accessibilité</h2>

	<p>
		Un effort conséquent a été porté à l’accessibilité.
		Comme évoqué précédement, <strong>un balisage sémantique et structuré est un pré-requis</strong>
		—&nbsp;mais ça ne suffit pas. Les <abbr lang="en" title="Cascading StyleSheet"
																						aria-label="Cascading StyleSheet">CSS</abbr>
		sont appliqués aussi progressivement que possible, afin de garantir le meilleur affichage
		possible des données pour chaque internaute.
	</p>

	<h3>Tableau accessible</h3>

	<p>Piqure de rappel&nbsp;:</p>

	<ul>
		<li>un tableau doit démarrer par un <code>&lt;caption&gt;</code>&nbsp;;</li>
		<li>
			les cellules d’en-tête <code>&lt;th&gt;</code> doivent porter un attribut <code>scope</code>,
			avec une valeur <var>row</var> ou <var>col</var> selon le cas&nbsp;;
		</li>
		<li>
			et vous aurez généralement besoin de distinguer l’entête du corps grâce à
			<code>&lt;thead&gt;</code> et <code>&lt;tbody&gt;</code>&nbsp;;
		</li>
		<li>
			pour les valeurs disposant d’une unité&nbsp;: si vous vous aventurez à utiliser l’élement
			<code>&lt;abbr&gt;</code> pour utiliser sa version abrégée, pensez à doubler l’attribut
			<code>title</code> avec l’attribut <code>aria-label</code> —&nbsp;cela en améliorera
			considérablement l’intérêt pour de nombreux internautes.
		</li>
	</ul>

	<p>
		Pour d’autres astuces utiles, je vous recommande chaleureusement la lecture
		du <a hreflang="en" href="https://inclusive-components.design/data-tables/">
			composant inclusif <em lang="en">Data Tables</em> de <strong>Heydon Pickering</strong></a>,
		qui est une véritable mine d’or.
	</p>

	<h3>Motifs</h3>
	<p>
		Pour <strong>distinguer les différentes zones autrement que par la couleur</strong>, un motif
		<abbr lang="en" title="Scalable Vector Graphics" aria-label="Scalable Vector Graphics">svg</abbr>
		est appliqué en
		<abbr lang="en" title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr>
		—&nbsp;vous en trouverez quelques-uns sur le site
		<a hreflang="en" lang="en" href="https://www.heropatterns.com/">Hero Patterns</a>&nbsp;:
	</p>
	<ol>
		<li>
			afin d’améliorer <strong>le mélange avec les couleurs ou dégradés d’arrière-plan</strong>, la propriété
			<code>background-blend-mode</code> est utilisée avec la valeur <code>hard-light</code>&nbsp;;
		</li>
		<li>
			les <strong>tailles et positions du motif</strong> dépendent directement de la valeur et de l’échelle du
			graphique,
			selon le type de graphique&nbsp;;
		</li>
		<li>
			pour ne pas embarquer trop de fichiers externes, on utilise
			<a hreflang="en" href="https://www.trysmudford.com/blog/using-css-custom-properties/">une technique
				proposée par <strong>Trys Mudford</strong> pour inclure nos
				<abbr lang="en" title="Scalable Vector Graphics" aria-label="Scalable Vector Graphics">svg</abbr>
				en <i lang="en">data URi</i> dans une variable
				<abbr lang="en" title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr> chacun</a>&nbsp;;
			ainsi, une liste finie de motifs est utilisée dans le thème, sans jamais répéter le <abbr lang="en"
																																																title="Scalable Vector Graphics"
																																																aria-label="Scalable Vector Graphics">svg</abbr>.
		</li>
	</ol>

	<div class="note">
		<h4>Qu’encoder&nbsp;?</h4>
		<p>
			<a hreflang="en" href="https://codepen.io/tigt/post/optimizing-svgs-in-data-uris"><strong>Taylor Hunt</strong>
				a rédigé un article complet sur l’optimisation des
				<abbr lang="en" title="Scalable Vector Graphics" aria-label="Scalable Vector Graphics">svg</abbr>
				passés en <i lang="en">data URi</i></a>. En résumé, seuls les chevrons et le
			caractère «&nbsp;#&nbsp;» ont besoin d’être encodés dans le
			<abbr lang="en" title="Cascading StyleSheet" aria-label="Cascading StyleSheet">css</abbr>.
			Ne vous fatiguez pas avec les autres caractères, leur encodage nuit sérieusement à la lisibilité.
		</p>
	</div>

	{% include 'includes/_svg-encoding.njk' %}

	<h3>Respect des préférences</h3>
	<p>
		Afin de respecter autant que possible les préférences des visiteurs,
		de nombreux éléments ont été adaptés&nbsp;:
	</p>
	<ol>
		<li>
			les dimensions sont en unités relatives (<code>em</code> ou <code>rem</code> selon les cas),
			afin de s’ajuster de manière cohérente au corps de texte hérité du navigateur et de pouvoir
			être agrandi ou réduit sans perte&nbsp;;
		</li>
		<li>
			les couleurs sont adaptées lorsque le <strong>mode de contrastes élevés</strong> de Windows est détecté à l’aide
			de
			<code>-ms-high-contrast: active</code>, inspiré par
			<a hreflang="en" href="https://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast">
				l’article de <strong>Greg Whitworth</strong></a> sur le sujet. Je vous conseille d’ailleurs
			<a hreflang="en" href="http://www.iangraham.org/books/xhtml1/appd/update-23feb2000.html">
				l’increvable page <cite lang="en">Test of System Colors Specified in CSS 2</cite> rédigée
				par <strong>Ian Graham</strong></a>, éditée en… 2000&nbsp;!
		</li>
		<li>
			les <strong>animations et transitions sont désactivées</strong> lorsque le système
			expose cette préférence grâce à <code>prefers-reduced-motion: reduce</code>&nbsp;;
		</li>
		<li>
			les <strong>effets de survol</strong> dont l’état initial consiste à masquer du contenu
			sont activés contextuellement dans la requête média <code>@media (hover: hover) { … }</code>.
		</li>
	</ol>

	<h3><code>display</code> et sémantique</h3>
	<p>
		<strong>Adrian Roselli</strong> explique que jouer avec le <code>display</code> d’un élément
		<code>&lt;table&gt;</code> ou <code>&lt;dl&gt;</code> met en péril sa sémantique.
		Cette dernière est donc «&nbsp;verrouillée&nbsp;» à l’aide des rôles
		<abbr lang="en" title="Accessible Rich Internet Application"
					aria-label="Accessible Rich Internet Application">aria</abbr>
		dédiés —&nbsp;comme il l’explique
		<a href="http://adrianroselli.com/2018/02/tables-css-display-properties-and-aria.html" hreflang="en">dans un article
			détaillé</a>.
	</p>
	<p>
		C’est pourquoi chaque tableau est précédé d’un interrupteur —&nbsp;basé sur
		<a hreflang="en" href="https://inclusive-components.design/toggle-button/">le composant inclusif
			conçu par <strong>Heydon Pickering</strong></a>&nbsp;—
		dont le seul et unique rôle est de désactiver les styles supplémentaires&nbsp;:
	</p>

	{% include 'includes/_inclusive-toggle.njk' %}

	<p>
		Voilà, nous sommes prêts à entrer dans le vif du sujet.<br>
		<strong>Faites chauffer votre inspecteur&nbsp;!</strong>
	</p>
{% endblock %}
